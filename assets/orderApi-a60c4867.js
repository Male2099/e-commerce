import{m as t}from"./index-a6d04a70.js";const a="http://localhost:8000",o=()=>{const e=document.cookie.split("; ").find(s=>s.startsWith("M-Donut-Token="));return e?decodeURIComponent(e.split("=")[1]):!1},i={async create(){try{if((await t.post(a+"/api/orders",null,{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}})).status===201)return!0}catch(r){console.error(r.response.data.errors)}return!1},async currentOrder(){try{const r=await t.get(a+"/api/orders/current-order",{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}});if(r.status===200)return r.data}catch(r){await this.create(),console.error(r.response.data.errors)}return!1},async update(r){try{if((await t.patch(a+"/api/orders",r,{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}})).status===200)return!0}catch(e){console.error(e.response.data.errors)}return!1},async pendingOrders(){try{const r=await t.get(a+"/api/orders/pending-orders",{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}});if(r.status===200)return r.data}catch(r){console.error(r.response.data.errors)}return!1},async finishedORder(){try{const r=await t.get(a+"/api/orders/finished-orders",{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}});if(r.status===200)return r.data}catch(r){console.error(r.response.data.errors)}return!1},async all(){try{const r=await t.get(a+"/api/orders/all",{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}});if(r.status===200)return r.data}catch(r){console.error(r.response.data.errors)}return!1},async exclude_busyOrder(){try{const r=await t.get(a+"/api/orders/exclude-busy",{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}});if(r.status===200)return r.data}catch(r){console.error(r.response.data.errors)}return!1},async update_AdminOnly(r){try{if(r.status="finished",(await t.patch(a+"/api/orders/update/"+r.id,r,{headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o()}`}})).status===200)return!0}catch(e){console.error(e.response.data.errors)}return!1}};export{i as o};
